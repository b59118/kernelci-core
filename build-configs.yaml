# See the KernelCI wiki page regarding the format of this file:
# https://github.com/kernelci/kernelci-doc/wiki/Build-configurations


trees:
  lsdk:
    url: "https://bitbucket.sw.nxp.com/scm/~nxa34859/dash-lts.git"
  agross:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/qcom/linux.git"

  alex:
    url: "https://git.linaro.org/people/alex.bennee/linux.git"

  amlogic:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux-amlogic.git"

  android:
    url: "https://android.googlesource.com/kernel/common"

  ardb:
    url: "git://git.kernel.org/pub/scm/linux/kernel/git/ardb/linux.git"

  arm-soc:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc.git"

  arnd:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/arnd/playground.git"

  broonie-regmap:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/regmap.git"

  broonie-regulator:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git"

  broonie-sound:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git"

  broonie-spi:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi.git"

  chrome-platform:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/chrome-platform/linux.git"

  clk:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git"

  efi:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/efi/efi.git"

  evalenti:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/evalenti/linux-soc-thermal.git"

  gtucker:
    url: 'https://gitlab.collabora.com/gtucker/linux.git'

  kernelci:
    url: "https://github.com/kernelci/linux.git"

  khilman:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux.git"

  krzysztof:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/krzk/linux.git"

  linaro-android:
    url: "https://android-git.linaro.org/git/kernel/linaro-android.git"

  linusw:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git/"

  lsk:
    url: "https://git.linaro.org/kernel/linux-linaro-stable.git"

  mainline:
    url: 'git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git'

  media:
    url: "https://git.linuxtv.org/media_tree.git"

  net-next:
    url: "git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git"

  next:
    url: 'git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git'

  omap:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/tmlind/linux-omap.git"

  pmwg:
    url: "https://git.linaro.org/power/linux.git"

  qcom-lt:
    url: "https://git.linaro.org/landing-teams/working/qualcomm/kernel.git"

  renesas:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas.git"

  rmk:
    url: "git://git.armlinux.org.uk/~rmk/linux-arm.git"

  rt-stable:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-stable-rt.git"

  samsung:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/kgene/linux-samsung.git"

  stable:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git"

  stable-rc:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git"

  tegra:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux.git"

  ulfh:
    url: "https://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc.git"


fragments:

  debug:
    path: "kernel/configs/debug.config"

  kselftest:
    path: "kernel/configs/kselftest.config"

  linaro_android_base:
    path: "android/configs/android-base.cfg"

  linaro_android_recommended:
    path: "android/configs/android-recommended.cfg"

  tinyconfig:
    path: "kernel/configs/tiny.config"
    defconfig: 'tinyconfig'

  virtualvideo:
    path: "kernel/configs/virtualvideo.config"
    configs:
      - 'CONFIG_MEDIA_SUPPORT=y'
      - 'CONFIG_MEDIA_CAMERA_SUPPORT=y'
      - 'CONFIG_VIDEO_DEV=y'
      - 'CONFIG_VIDEO_V4L2=y'
      - 'CONFIG_V4L_TEST_DRIVERS=y'
      - 'CONFIG_VIDEO_VIVID=y'
      - 'CONFIG_VIDEO_VIVID_MAX_DEVS=64'

  x86_kvm_guest:
    path: "arch/x86/configs/kvm_guest.config"


build_environments:

  gcc-8:
    cc: gcc
    cc_version: 8
    arch_map: &gcc_arch_map
      i386: 'x86'
      x86_64: 'x86'
      riscv: 'riscv64'
    cross_compile: &default_cross_compile
      arc: 'arc-elf32-'
      arm: 'arm-linux-gnueabihf-'
      arm64: 'aarch64-linux-gnu-'
      mips: 'mips-linux-gnu-'
      riscv: 'riscv64-linux-gnu-'

  clang-8:
    cc: clang
    cc_version: 8
    arch_map: &clang_arch_map
      i386:
      x86_64:
      arm:
      arm64:
      mips:
      arc:
      riscv:
    cross_compile: *default_cross_compile

  clang-9:
    cc: clang
    cc_version: 9
    arch_map: *clang_arch_map
    cross_compile: *default_cross_compile


# Default config with full build coverage
build_configs_defaults:

  gcc-8:

    build_environment: gcc-8

    fragments: &default_fragments
      - 'debug'
      - 'kselftest'
      - 'tinyconfig'

    architectures: &default_architectures

      arc: &arc_arch
        base_defconfig: 'nsim_hs_defconfig'
        extra_configs: ['allnoconfig']
        filters: &arc_default_filters
          # remove any non-ARCv2 defconfigs since we only have ARCv2 toolchain
          - blacklist:
              defconfig:
                - 'axs101_defconfig'
                - 'nps_defconfig'
                - 'nsim_700_defconfig'
                - 'nsimosci_defconfig'
                - 'tb10x_defconfig'

      arm: &arm_arch
        base_defconfig: 'multi_v7_defconfig'
        extra_configs:
          - 'allnoconfig'
          - 'multi_v7_defconfig+CONFIG_CPU_BIG_ENDIAN=y'
          - 'multi_v7_defconfig+CONFIG_SMP=n'
          - 'multi_v7_defconfig+CONFIG_EFI=y+CONFIG_ARM_LPAE=y'

      arm64: &arm64_arch
        extra_configs:
          - 'allmodconfig'
          - 'allnoconfig'
          - 'defconfig+CONFIG_CPU_BIG_ENDIAN=y'
          - 'defconfig+CONFIG_RANDOMIZE_BASE=y'

      i386: &i386_arch
        base_defconfig: 'i386_defconfig'
        extra_configs: ['allnoconfig']

      mips: &mips_arch
        base_defconfig: '32r2el_defconfig'
        extra_configs: ['allnoconfig']
        filters: &mips_default_filters
          - blacklist: {defconfig: ['generic_defconfig']}

      riscv: &riscv_arch
        extra_configs: ['allnoconfig']

      x86_64: &x86_64_arch
        base_defconfig: 'x86_64_defconfig'
        extra_configs: ['allmodconfig', 'allnoconfig']
        fragments: [x86_kvm_guest]


# Minimum architecture defconfigs
arch_defconfigs:
  arc: &arc_defconfig
    base_defconfig: 'nsim_hs_defconfig'
    filters:
      - whitelist: { defconfig: ['nsim_hs_defconfig'] }
  arm: &arm_defconfig
    base_defconfig: 'multi_v7_defconfig'
    filters:
      - whitelist: { defconfig: ['multi_v7_defconfig'] }
  arm64: &arm64_defconfig
    base_defconfig: 'defconfig'
    filters:
      - whitelist: { defconfig: ['defconfig'] }
  mips: &mips_defconfig
    base_defconfig: '32r2el_defconfig'
    filters:
      - whitelist: { defconfig: ['32r2el_defconfig'] }
  riscv: &riscv_defconfig
    base_defconfig: 'defconfig'
    filters:
      - whitelist: { defconfig: ['defconfig'] }
  x86_64: &x86_64_defconfig
    base_defconfig: 'x86_64_defconfig'
    filters:
      - whitelist: { defconfig: ['x86_64_defconfig'] }


# Build fewer kernel configs with stable branches
stable_variants: &stable_variants
  gcc-8:
    build_environment: gcc-8
    fragments: ['tinyconfig']
    architectures:
      arc:
        base_defconfig: 'nsim_hs_defconfig'
        extra_configs: ['allnoconfig']
        filters: *arc_default_filters
      arm:
        base_defconfig: 'multi_v7_defconfig'
        extra_configs: ['allnoconfig']
      arm64:
        extra_configs: ['allnoconfig']
      i386:
        base_defconfig: 'i386_defconfig'
        extra_configs: ['allnoconfig']
      mips:
        base_defconfig: '32r2el_defconfig'
        extra_configs: ['allnoconfig']
        filters: *mips_default_filters
      riscv:
        extra_configs: ['allnoconfig']
      x86_64:
        base_defconfig: 'x86_64_defconfig'
        extra_configs: ['allnoconfig']


build_configs:

  next:
    tree: lsdk
    branch: 'linux-4.19'
    variants:
      gcc-8:
        build_environment: gcc-8
        fragments: *default_fragments
        architectures:
          i386: *i386_arch
          x86_64: *x86_64_arch
          mips: *mips_arch
          riscv: *riscv_arch
          arc: *arc_arch
          arm64: *arm64_arch
          arm:
            base_defconfig: 'multi_v7_defconfig'
            extra_configs:
              - 'multi_v7_defconfig+CONFIG_CPU_BIG_ENDIAN=y'
              - 'multi_v7_defconfig+CONFIG_SMP=n'
              - 'multi_v7_defconfig+CONFIG_EFI=y+CONFIG_ARM_LPAE=y'
              - 'allnoconfig'
              - 'allmodconfig'
      clang-8:
        build_environment: clang-8
        fragments: *default_fragments
        architectures:
          arm64: *arm64_arch
